{{- if .Values.ingress -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    {{- if .Values.ingress.certificationArn }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.certificationArn }}
    {{- end}}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: {{ .Values.ingress.scheme }}
    alb.ingress.kubernetes.io/group.name: {{ .Release.Namespace }}
    kubernetes.io/ingress.class: alb
    # it will register pod ip to target group instead of node
    alb.ingress.kubernetes.io/target-type: ip
    {{- if .Values.ingress.cidrs }}
    alb.ingress.kubernetes.io/inbound-cidrs: {{ (join "," .Values.ingress.cidrs ) }}
    {{- end }}
    {{- if .Values.ingress.healthCheckPath }}
    alb.ingress.kubernetes.io/healthcheck-path: {{ .Values.ingress.healthCheckPath }}
    {{- end }}
    {{- if .Values.ingress.accessLogBucket }}
    alb.ingress.kubernetes.io/load-balancer-attributes: >-
      access_logs.s3.enabled=true,
      access_logs.s3.bucket={{ tpl .Values.ingress.accessLogBucket . }}
    {{- end }}
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}-ingress
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - host: {{- if .Values.ingress.host }} {{ tpl .Values.ingress.host . }} {{- end }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ssl-redirect
            port:
              name: use-annotation
      {{- range $port := .Values.container.port }}
      - path: {{ tpl $port.path $ }}
        pathType: Prefix
        backend:
          service:
            name: {{ $.Release.Name }}-svc
            port:
              number: {{ int $port.port }}
      {{- end }}
{{ end }}